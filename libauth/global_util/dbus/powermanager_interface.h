/*
 * This file was generated by qdbusxml2cpp-fix version 0.8
 * Command line was: qdbusxml2cpp-fix -c PowerManager -p /home/repo/dde-session-shell/src/global_util/dbus/powermanager_interface /home/repo/dde-session-shell/xml/org.deepin.dde.PowerManager1.xml
 *
 * qdbusxml2cpp-fix is Copyright (C) 2016 Deepin Technology Co., Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef POWERMANAGER_INTERFACE_H
#define POWERMANAGER_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

#include <DDBusExtendedAbstractInterface>
#include <QtDBus/QtDBus>


/*
 * Proxy class for interface org.deepin.dde.PowerManager1
 */
class __PowerManagerPrivate;
class __PowerManager : public DTK_CORE_NAMESPACE::DDBusExtendedAbstractInterface
{
    Q_OBJECT

public:
    static inline const char *staticInterfaceName()
    { return "org.deepin.dde.PowerManager1"; }

public:
    explicit __PowerManager(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~__PowerManager();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<bool> CanHibernate()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("CanHibernate"), argumentList);
    }



    inline QDBusPendingReply<bool> CanReboot()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("CanReboot"), argumentList);
    }



    inline QDBusPendingReply<bool> CanShutdown()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("CanShutdown"), argumentList);
    }



    inline QDBusPendingReply<bool> CanSuspend()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("CanSuspend"), argumentList);
    }




Q_SIGNALS: // SIGNALS
    // begin property changed signals

public Q_SLOTS:
    void CallQueued(const QString &callName, const QList<QVariant> &args);

private Q_SLOTS:
    void onPendingCallFinished(QDBusPendingCallWatcher *w);

private:
    __PowerManagerPrivate *d_ptr;
};

namespace org {
  namespace deepin {
    namespace dde {
      typedef ::__PowerManager PowerManager1;
    }
  }
}
#endif
